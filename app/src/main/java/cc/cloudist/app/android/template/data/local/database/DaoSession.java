package cc.cloudist.app.android.template.data.local.database;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import cc.cloudist.app.android.template.data.local.database.dao.ImageDao;
import cc.cloudist.app.android.template.data.local.database.dao.StoryDao;
import cc.cloudist.app.android.template.data.local.database.entity.Story;
import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import cc.cloudist.app.android.template.data.local.database.entity.Image;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig storyDaoConfig;
    private final DaoConfig imageDaoConfig;

    private final StoryDao storyDao;
    private final ImageDao imageDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        storyDaoConfig = daoConfigMap.get(StoryDao.class).clone();
        storyDaoConfig.initIdentityScope(type);

        imageDaoConfig = daoConfigMap.get(ImageDao.class).clone();
        imageDaoConfig.initIdentityScope(type);

        storyDao = new StoryDao(storyDaoConfig, this);
        imageDao = new ImageDao(imageDaoConfig, this);

        registerDao(Story.class, storyDao);
        registerDao(Image.class, imageDao);
    }
    
    public void clear() {
        storyDaoConfig.getIdentityScope().clear();
        imageDaoConfig.getIdentityScope().clear();
    }

    public StoryDao getStoryDao() {
        return storyDao;
    }

    public ImageDao getImageDao() {
        return imageDao;
    }

}
